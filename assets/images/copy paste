const [
          DropdownMenuItem<String>(
            value: 'All',
            child: Text('All'),
          ),
          DropdownMenuItem<String>(
            value: 'Price 500-1000',
            child: Text('Price 500-1000'),
          ),
          DropdownMenuItem<String>(
            value: 'Price 1000-2000',
            child: Text('Price 1000-2000'),
          ),
          DropdownMenuItem<String>(
            value: 'Price 2000-3000',
            child: Text('Price 2000-3000'),
          ),
          DropdownMenuItem<String>(
            value: 'Price 3000-4000',
            child: Text('Price 3000-4000'),
          ),
          DropdownMenuItem<String>(
            value: 'Price 4000-5000',
            child: Text('Price 4000-5000'),
          ),
          DropdownMenuItem<String>(
            value: 'More then 5000',
            child: Text('More then 5000'),
          )
        ],


=============================================================================================================================================



      CarouselSlider(
                      items: imageList
                          .map((item) => ClipRRect(
                                borderRadius: BorderRadius.circular(10),
                                child: PhotoView(
                                  
                                  enablePanAlways: true,
                                  wantKeepAlive: true,
                                  imageProvider: AssetImage(
                                    item['image_path'],
                                  ),
                                ),
                              ))
                          .toList(),
                      carouselController: carouselController,
                      options: CarouselOptions(
                        scrollPhysics: const BouncingScrollPhysics(),
                        autoPlay: false,
                        aspectRatio: 1,
                        viewportFraction: 1,
                        enableInfiniteScroll: true,
                        onPageChanged: (index, reason) {
                          setState(() {
                            currentState = index;
                          });
                        },
                      ),
                    ),